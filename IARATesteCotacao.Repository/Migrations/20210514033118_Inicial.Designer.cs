// <auto-generated />
using System;
using IARATesteCotacao.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IARATesteCotacao.Data.Migrations
{
    [DbContext(typeof(ContextDb))]
    [Migration("20210514033118_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IARATesteCotacao.Domain.Entities.ItensQuotation", b =>
                {
                    b.Property<long>("QuotationId")
                        .HasColumnType("bigint");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ItemNumber")
                        .HasColumnType("int");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("varchar(32)");

                    b.Property<decimal>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,4)")
                        .HasDefaultValue(0m);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasColumnType("varchar(32)");

                    b.HasKey("QuotationId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ItensQuotation");
                });

            modelBuilder.Entity("IARATesteCotacao.Domain.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("ProductId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("IARATesteCotacao.Domain.Entities.Quotation", b =>
                {
                    b.Property<long>("QuotationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("varchar(64)");

                    b.Property<string>("CnpjClient")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("CnpjSeller")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Comments")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("ComplementAddress")
                        .HasColumnType("varchar(32)");

                    b.Property<DateTime>("DateLimit")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasColumnType("varchar(32)");

                    b.Property<string>("State")
                        .HasColumnType("varchar(2)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("QuotationId");

                    b.ToTable("Quotation");
                });

            modelBuilder.Entity("IARATesteCotacao.Domain.Entities.ItensQuotation", b =>
                {
                    b.HasOne("IARATesteCotacao.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IARATesteCotacao.Domain.Entities.Quotation", "Quotation")
                        .WithMany("ItensQuotation")
                        .HasForeignKey("QuotationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Quotation");
                });

            modelBuilder.Entity("IARATesteCotacao.Domain.Entities.Quotation", b =>
                {
                    b.Navigation("ItensQuotation");
                });
#pragma warning restore 612, 618
        }
    }
}
